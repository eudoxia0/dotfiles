# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
    ./root.nix
  ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/8e4b4a37-9ba3-4fc5-ade6-8b9dc0d84c3d";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-819e4385-a108-4b54-8564-ff433e701260".device = "/dev/disk/by-uuid/819e4385-a108-4b54-8564-ff433e701260";

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/B819-5432";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/cceff8bf-a5dc-4ab7-81c7-3fdc556e75e2"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp34s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;


  #
  # CUSTOM
  #

  # Enable swap on luks
  boot.initrd.luks.devices."luks-e987f8b6-8c32-4bc6-9d01-37ede2713e45".device = "/dev/disk/by-uuid/e987f8b6-8c32-4bc6-9d01-37ede2713e45";
  boot.initrd.luks.devices."luks-e987f8b6-8c32-4bc6-9d01-37ede2713e45".keyFile = "/crypto_keyfile.bin";

  networking.hostName = "bullroarer";
}
