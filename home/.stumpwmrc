;-*-Lisp-*-

(in-package :stumpwm)

(set-prefix-key (kbd "s-t"))
(setf *mouse-focus-policy* :click)

(setq *terminal* "urxvt")

(define-key *root-map* (kbd "C-q") "quit")
(define-key *root-map* (kbd "C-r") "reload")

;;; Workspaces

(define-key *top-map* (kbd "s-1") "gselect web")
(define-key *top-map* (kbd "s-2") "gselect term")
(define-key *top-map* (kbd "s-3") "gselect edit")
(define-key *top-map* (kbd "s-4") "gselect im")

;;; Commands

(defmacro com (name cmd keybinding &optional (class name))
  `(progn
     (defcommand ,name () ()
       (run-or-raise ,cmd '(:class ,(symbol-name class))))
     (define-key *top-map* (kbd ,keybinding) ,(symbol-name name))))

(com chromium "chromium" "C-s-c")
(com xchat "xchat" "C-s-x")
(com pidgin "pidgin" "C-s-i")
(com fm "thunar" "C-s-f")

(defcommand open-selection-browser () ()
  "from http://www.mygooglest.com/fni/stumpwm.html
   Get the X selection and order the GUI browser to open it."
  (run-shell-command (concatenate 'string "exec chromium-browser " (get-x-selection))))

(defcommand google (search)
  ((:string "Search in Google for: "))
  "ask the user for a search string and search for it in Google"
  (check-type search string)
  (substitute #\+ #\Space search)
  (run-shell-command (cat "firefox http://www.google.com/search?q=" search)))

;;; Keybindings

(defcommand xlock () ()
  "docstring"
  (run-shell-command "exec xscreensaver-command -lock"))

(define-key *root-map* (kbd "b") "open-selection-browser")
(define-key *root-map* (kbd "g") "google")
(define-key *root-map* (kbd "x") "xlock")

;;; Theme

(set-fg-color "SteelBlue")
(set-bg-color "Black")
(set-border-color "Gray30")
(set-msg-border-width 0)
(setf *message-window-padding* 20)
(setf *maxsize-border-width* 0)
(setf *normal-border-width* 1)
(setf *window-border-style* :tight)
(set-focus-color "MidnightBlue")
(set-unfocus-color "Black")
(set-frame-outline-width 0)

;;; Autostart

(stumpwm::run-commands
 "gnew web"
 "gnew term"
 "gnew edit"
 "gnew im"
 "gselect web"
 "xsetroot -cursor_name left_ptr")

(require 'swank)
(swank:create-server)
